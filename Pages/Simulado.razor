@page "/simulado"
@inject QuestaoService service

<h1>Simulado</h1>

@foreach (var quest in Questoes)
{
    <div class="questao">
        <p>@quest.Id) @quest.QuestaoTitulo</p>
        <ul>
            <li><input id="Opcao1" type="radio" name="@quest.Id" class="rb" value="@quest.Opcao1" @onclick="()=> SelecionarResposta(quest.Id, quest.Opcao1)" />@quest.Opcao1</li>
            <li><input id="Opcao2" type="radio" name="@quest.Id" class="rb" value="@quest.Opcao2" @onclick="()=> SelecionarResposta(quest.Id, quest.Opcao2)" />@quest.Opcao2</li>
            <li><input id="Opcao3" type="radio" name="@quest.Id" class="rb" value="@quest.Opcao3" @onclick="()=> SelecionarResposta(quest.Id, quest.Opcao3)" />@quest.Opcao3</li>
            <li><input id="Opcao4" type="radio" name="@quest.Id" class="rb" value="@quest.Opcao4" @onclick="()=> SelecionarResposta(quest.Id, quest.Opcao4)" />@quest.Opcao4</li>
            <li><input id="Opcao5" type="radio" name="@quest.Id" class="rb" value="@quest.Opcao5" @onclick="()=> SelecionarResposta(quest.Id, quest.Opcao5)" />@quest.Opcao5</li>
        </ul>
        <label name="@quest.Id" class="resposta" style="display:none;">@quest.Resposta</label>
    </div>
}

<button id="but1" type="button" class="btn-success" @onclick="DisplayResults">Submit</button>
<div id="lbluserres">@userResults</div>

<style>
    .questao {
        border: 1px solid #ccc;
        padding: 10px;
        margin-bottom: 20px;
    }

    ul {
        list-style-type: none;
        padding: 0;
    }

    li {
        margin-bottom: 5px;
    }

    .btn-success {
        margin-top: 20px;
    }
</style>

@code {
    List<Questao> Questoes = new List<Questao>();
    Dictionary<int, string> respostasSelecionadas = new Dictionary<int, string>();
    string userResults = "";

    protected override async Task OnInitializedAsync()
    {
        await AtualizaQuestoes();
    }

    private async Task AtualizaQuestoes()
    {
        Questoes = await service.RetornaQuestaoAsync();
    }

    private void SelecionarResposta(int questaoId, string opcaoSelecionada)
    {
        if (respostasSelecionadas.ContainsKey(questaoId))
        {
            respostasSelecionadas[questaoId] = opcaoSelecionada;
        }
        else
        {
            respostasSelecionadas.Add(questaoId, opcaoSelecionada);
        }
    }

    private void DisplayResults()
    {
        userResults = "";

        foreach (var quest in Questoes)
        {
            var questaoId = quest.Id;
            var respostaCorreta = quest.Resposta;

            userResults += $"Q {questaoId}) ";

            if (respostasSelecionadas.ContainsKey(questaoId))
            {
                var selectedOption = respostasSelecionadas[questaoId];

                if (selectedOption == respostaCorreta)
                {
                    userResults += $"Sua resposta está correta: {selectedOption}";
                }
                else
                {
                    userResults += $"Sua resposta está incorreta. A resposta correta é: {respostaCorreta}";
                }
            }
            else
            {
                userResults += "Você não selecionou uma resposta.";
            }
        }
    }
}
